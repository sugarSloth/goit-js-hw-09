{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAuCtC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAhDWL,EAAOa,iBAEfC,UAAUC,IAAI,OAExBf,EAAOgB,iBAAiB,UAExB,SAA2BC,GACzBA,EAAMC,iBAIN,IAFA,IAAgCC,EAiBlC,SAA0BF,GACxB,IAAMZ,EAAQe,OAAOH,EAAMI,cAAcC,SAASjB,MAAMkB,OAClDC,EAAOJ,OAAOH,EAAMI,cAAcC,SAASE,KAAKD,OAChDE,EAASL,OAAOH,EAAMI,cAAcC,SAASG,OAAOF,OAE1D,GAAIG,MAAMrB,IAAUqB,MAAMF,IAASE,MAAMD,GACvC,MAAM,IAAIE,MAAM,uBAGlB,MAAO,CAAEtB,QAAOmB,OAAMC,S,CA1BUG,CAAiBX,GAAzCY,EAAwBV,EAAxBd,MAAOmB,EAAiBL,EAAjBK,KAAMC,EAAWN,EAAXM,OAEZK,EAAW,EAAGA,GAAYL,EAAQK,IAAY,CAGrD3B,EAAc2B,EAFOD,GAASC,EAAW,GAAKN,GAG3CO,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjBP,EAAAmC,OAAOC,QAAQ,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAE9D+B,OAAM,SAAAJ,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClBP,EAAAmC,OAAOI,QAAQ,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAIhEY,EAAMI,cAAciB,O","sources":["src/js/03-promises.js"],"sourcesContent":["\r\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\r\n\r\nconst formEl = document.querySelector('.form');\r\nconst submitBtn = formEl.lastElementChild;\r\n\r\nsubmitBtn.classList.add('btn');\r\n\r\nformEl.addEventListener('submit', formSubmitHandler);\r\n\r\nfunction formSubmitHandler(event) {\r\n  event.preventDefault();\r\n\r\n  const { delay, step, amount } = formValuesPicker(event);\r\n\r\n  for (let position = 1; position <= amount; position++) {\r\n    const promiseDelay = delay + (position - 1) * step;\r\n\r\n    createPromise(position, promiseDelay)\r\n      .then(({ position, delay }) => {\r\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\r\n      })\r\n      .catch(({ position, delay }) => {\r\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);      \r\n      });\r\n  }     \r\n\r\n  event.currentTarget.reset();\r\n}\r\n\r\nfunction formValuesPicker(event) {\r\n  const delay = Number(event.currentTarget.elements.delay.value);\r\n  const step = Number(event.currentTarget.elements.step.value);\r\n  const amount = Number(event.currentTarget.elements.amount.value);\r\n\r\n  if (isNaN(delay) || isNaN(step) || isNaN(amount)) {\r\n    throw new Error('Invalid form values');\r\n  }\r\n\r\n  return { delay, step, amount };\r\n}\r\n\r\nfunction createPromise(position, delay) {\r\n  return new Promise((resolve, reject) => {\r\n    const shouldResolve = Math.random() > 0.3;\r\n\r\n    setTimeout(() => {\r\n      if (shouldResolve) {\r\n        resolve({ position, delay });\r\n      } else {\r\n        reject({ position, delay });\r\n      }\r\n    }, delay);        \r\n  }) \r\n}\r\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","lastElementChild","classList","add","addEventListener","event","preventDefault","ref","Number","currentTarget","elements","value","step","amount","isNaN","Error","$ce04d3a99e08e73b$var$formValuesPicker","delay1","position1","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.38d7ec44.js.map"}